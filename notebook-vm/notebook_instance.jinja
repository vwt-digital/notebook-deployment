resources:
- name: {{ env["project"] }}-vn
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: true

- name: {{ env["project"] }}-fw
  type: compute.v1.firewall
  properties:
    network: $(ref.{{ env["project"] }}-vn.selfLink)
    sourceRanges: ["35.235.240.0/20"]
    direction: INGRESS
    allowed:
    - IPProtocol: TCP
      ports:
      - 22


- name: {{ env["project"] }}-vm
  type: compute.v1.instance
  properties:
    zone: {{ properties["zone"] }}
    machineType: https://www.googleapis.com/compute/v1/projects/{{ env["project"] }}/zones/{{ properties["zone"] }}/machineTypes/{{ properties["machineType"] }}
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/deeplearning-platform-release/global/images/family/{{ properties["imageFamily"] }}
    networkInterfaces:
    - network: $(ref.{{ env["project"] }}-vn.selfLink)
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    metadata:
     items:
       - key: startup-script
         value: |
            #! /bin/bash
            echo "running startup script"

            echo "Apt get upgrade"
            sudo apt-get upgrade -y

            if  [ ! -d "/home/jupyter/" ]; then
              mkdir /home/jupyter/
              echo "created /home/jupyter/"
            else
              echo "/home/jupyter was already created."
            fi

            mkdir /home/jupyter/.ssh
            gcloud secrets versions access latest --secret={{ env["project"] }}-private-key-secret > /home/jupyter/.ssh/id_rsa
            eval "$(ssh-agent -s)"
            ssh-add /home/jupyter/.ssh/id_rsa
            chmod 400 /home/jupyter/.ssh/id_rsa
            ssh-keyscan github.com >> /home/jupyter/.ssh/known_hosts
            sudo chown jupyter: /home/jupyter/.ssh//id_rsa

            if  [ ! -f "/home/jupyter/notebook.ipynb" ]; then
              wget  -O /home/jupyter/notebook.ipynb "https://raw.githubusercontent.com/vwt-digital/notebook-deployment/develop/notebook-vm/notebook.ipynb"
              echo "downloaded notebook"
            fi

            mkdir /home/jupyter/.git-commit-hooks
            wget  -O /home/jupyter/.git-commit-hooks/commit-msg "https://raw.githubusercontent.com/vwt-digital/commit-hooks/develop/hooks/commit-msg"
            sudo chmod a+x /home/jupyter/.git-commit-hooks/commit-msg
            git config --global core.hooksPath "/home/jupyter/.git-commit-hooks/commit-msg"

            REPO="{{properties["git-repo"]}}"
            if [ ! -z "$REPO" ];
            then
              echo "cloning $REPO"
              cd /home/jupyter/
              git clone $REPO
            else
              echo "Nothing to clone"$REPO
            fi
       - key: tags
         value: deeplearning-vm
       {% if properties["notebook-disable-root"] == "True" %}
       - key: notebook-disable-root
         value: "True"
       {% endif %}
       {% if properties["mail"] %}
       - key: proxy-user-mail
       value: {{ properties["mail"] }}
       {% endif %}
       - key: proxy-mode
         value: {{ properties["proxy-mode"] }}
       - key: install-nvidia-driver
         value: "True"
    {% if properties["gpu-type"] %}
    guestAccelerators:
      - acceleratorType: https://www.googleapis.com/compute/v1/projects/{{ env["project"] }}/zones/{{ properties["zone"] }}/acceleratorTypes/{{ properties["gpu-type"] }}
        acceleratorCount: {{ properties["gpu-count"] }}
    scheduling:
      onHostMaintenance: "TERMINATE"
    {% endif %}
    serviceAccounts:
    {% if properties["service-account"] %}
      - email: {{ properties["service-account"] }}@{{ env["project"] }}.iam.gserviceaccount.com
        scopes:
        - https://www.googleapis.com/auth/cloud-platform
        - https://www.googleapis.com/auth/userinfo.email
    {% else %}
      - email: {{ env["project_number"] }}-compute@developer.gserviceaccount.com
        scopes:
        - https://www.googleapis.com/auth/cloud-platform
        - https://www.googleapis.com/auth/userinfo.email
    {% endif %}
